//Time Complexity : O(n)
//Space Complexity : O(1)
class Solution3 {
    public boolean wordPattern(String pattern, String s) {
        String[] words = s.split(" ");
        if(words.length != pattern.length()) {
            return false;
        }

        HashMap<Character, String> map = new HashMap();
        for(int i=0; i< pattern.length(); i++){
            char curr_char = pattern.charAt(i);
            if(map.containsKey(curr_char)){
                if(!map.get(curr_char).equals(words[i])){
                    return false;
                }
                }else {
                    if(map.containsValue(words[i])){
                        return false;
                    }
                    map.put(curr_char,words[i]);
                }
            }
            return true;
}
}
